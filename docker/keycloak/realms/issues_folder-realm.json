{
  "id": "issues_folder",
  "realm": "issues_folder",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "605f88b9-8b41-460b-a723-34f02c0323b2",
        "name": "default-roles-issues_folder",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "issues_folder",
        "attributes": {}
      },
      {
        "id": "21935d8d-9296-496a-9f65-df266ad0b69f",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "issues_folder",
        "attributes": {}
      },
      {
        "id": "97f52883-31f2-4ddd-a2c0-f0942b142740",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "issues_folder",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "7b0cdbc7-1903-4482-bfee-cc3bab5e51d1",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "3d43f38a-854e-4a69-bcbc-1f10e8971bdc",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "5656f810-b2e6-4f93-b4c0-eaeb6484b047",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "62ba9742-b688-4e50-a043-eacfb088d3d8",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "5faf6543-0e22-407c-a930-c43a169b0f7d",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "0c0c4692-4230-4c2a-9026-dfaf8c7f5eff",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "005536ad-f666-4780-a214-da7bc8672d35",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "c55eeb07-796c-4668-a93f-92328c57b46a",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "cf129ade-d918-43c9-8c11-19725f91b841",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-events",
                "manage-authorization",
                "query-users",
                "impersonation",
                "view-realm",
                "manage-clients",
                "query-realms",
                "query-groups",
                "view-users",
                "view-events",
                "query-clients",
                "manage-users",
                "view-clients",
                "manage-identity-providers",
                "view-authorization",
                "create-client",
                "view-identity-providers",
                "manage-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "d9b764f8-9031-4dea-b2bd-e808753ccdd5",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "144e24a3-17b9-4b9a-9dc4-e618e572924f",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "1f55bd70-a4e2-458e-80f0-def4644348b6",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "4a596f30-f927-46d8-96b0-d7a1f83e7910",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "e560e065-7a1a-467b-b4d3-eef2c41a346a",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "c591cf54-e7b0-43fc-8583-006aee43b8d4",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "b0450ca6-66f2-464e-9a87-cdceae9fa4c3",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "a4033493-ad26-41b7-9766-3703118a656a",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "0c4a120d-56e2-48d9-871b-5f8947c87a54",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        },
        {
          "id": "a6eac92e-b820-49bc-b09f-303535ceaf75",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "257731b9-4513-4359-89f9-ef03a50be954",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "issues_folder_client": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "efca582c-c92c-4ec9-ba8c-e555a2d43b57",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "35c8f1f3-24cf-4214-a9e1-ecd35573e87a",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "47b1f211-37e5-48a6-baba-c56604b9b4f8",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
          "attributes": {}
        },
        {
          "id": "8203a15d-f4fb-4180-9a4a-6ac6f7b9892a",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
          "attributes": {}
        },
        {
          "id": "13793730-2887-4f8a-9389-ac4beb2db057",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
          "attributes": {}
        },
        {
          "id": "87311089-6a1d-4cb5-98af-61d14aa4fec9",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
          "attributes": {}
        },
        {
          "id": "0bb62cb7-b63d-4615-90c0-c4f1365f1bc4",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
          "attributes": {}
        },
        {
          "id": "4561421a-afa0-4da1-8020-045e0865e474",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
          "attributes": {}
        },
        {
          "id": "b68d54e7-0f73-4db4-b7d3-0ab245c4b06d",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "605f88b9-8b41-460b-a723-34f02c0323b2",
    "name": "default-roles-issues_folder",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "issues_folder"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "80a75c9e-cc11-4394-a40f-5d0d960604ff",
      "createdTimestamp": 1645264781427,
      "username": "test",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "test",
      "lastName": "test",
      "email": "test@test.test",
      "credentials": [
        {
          "id": "ce775f0a-7137-4306-8c49-7359d444a388",
          "type": "password",
          "createdDate": 1645264790517,
          "secretData": "{\"value\":\"opMVkF6lIwzgz0iE1LcgpkCnYnb0IRfmVoPALCj3lS87hYQnsaToAoBZi6iW6Uluw/6PZaJgxp7n42HEP4So6g==\",\"salt\":\"8cWj64XixQZ6unK0KZ2a/A==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-issues_folder"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "7e18482d-a870-4d0e-8bb9-6df176758a7e",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/issues_folder/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/issues_folder/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d366e334-5f1e-4f5b-9773-5e0318db2d3e",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/issues_folder/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/issues_folder/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "8ff19922-ce83-4843-aaed-323190cd1ec7",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e236e787-4610-4658-9d31-c9a805c9915b",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "35c8f1f3-24cf-4214-a9e1-ecd35573e87a",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cdace2e3-7c5a-4985-b3f5-b9dfa33fde44",
      "clientId": "issues_folder_client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "http://localhost:4200/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email",
        "issues_folder"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "257731b9-4513-4359-89f9-ef03a50be954",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "06c8d3c5-5930-45ef-ac38-7dcdb8e632b8",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/issues_folder/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/issues_folder/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "9b2f2132-1fd4-4c4d-ba85-4376e2e14e5f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "0b21bcc9-86d1-4ab0-b1be-46ba3cb74194",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "ffbfee64-4dd4-4294-a1eb-2e9380a22ace",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "966f98c9-a8b6-462b-aacd-a4f3890f4b9b",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "fe9edf1b-eb8d-420a-970d-1c6e7f365742",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "09e3352f-9fec-428c-bad0-98ffbe532c11",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23b3c937-6f7e-4a05-ae66-79d2992a4d33",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "42da59d8-9598-46cc-b82d-369dc51189d9",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a6cd76e6-6370-4d03-a4ad-879bec5e1c86",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d1f3a1fd-f383-4dc4-a525-174433f38c8f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ee65806e-b0e0-4a11-9232-52450c47a524",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8c91cddc-07a0-4b02-839f-e15e168222df",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "501904f2-44c2-47a0-b3a5-b8613abab0ca",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a957331d-b1e2-45d3-a338-435dd7fad892",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0ab64f6e-d47e-4daf-b91c-818f8d279575",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4bf47256-f6ff-4c36-9d72-98f0d945c024",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1401efa2-7dd8-41f7-b64f-24f6a8f6a963",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "c06a85f8-217f-4d07-8105-21db10f0abd4",
      "name": "issues_folder",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "c8a6b1f7-d287-4693-b017-9062e562f8d0",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "7a53cc7f-5a04-438f-93e6-770a3710137b",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "a24536fa-19f9-4d7c-b1c9-2aa8532681c8",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cbe16c5b-a9aa-46ef-9fa8-04df6da17f02",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "54e31d54-1940-40ef-81dc-13b2c4f8fe81",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e37925ee-1a47-43d5-aee2-c3fa2298d019",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a6452977-0906-4658-a71a-3c29e2f83560",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "74070f90-896c-49e2-848e-1d1b6c3ed0d7",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "34a929a8-fab8-405f-8bb6-fe2aa169da6b",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8925668c-d40c-4189-a8f6-92d098b296e5",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a80ae9c7-df10-40e1-804b-4f20359f4655",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ad9d8edc-b0df-480a-be39-f8d97763e441",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f932a388-7a45-4411-97ac-bcfafb0d5a18",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "372c9be0-19e5-45fa-9fa9-b6615f1112f2",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "d70ac06a-7c98-4544-a5ff-0c2c9a872996",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "5ed36104-c23b-4af8-840d-2d19e6715dbf",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "d693f4cd-95c1-4b74-af32-a132d951c474",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "563a7b46-7b07-4489-85ae-dcecc946091c",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "5003b3cd-fd9c-4b74-a36f-a77cf9f87701",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "65cca9bc-9da5-48d1-9efb-d1a215312e10",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "899718b1-7b74-43f5-9580-1232973a706d",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "b9a774b1-7e62-4122-80ee-38174f5fad77",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "abab4516-cc43-467b-bc93-d315cbddeeb1",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "52f185fe-dff5-4166-b7e6-160626cefe6e",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "46373df9-807c-477d-8f89-9727e12f2291",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "ee5cfdce-04f0-464d-ac9b-d94ecd1d1b94",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "5141c5cb-315e-48e7-a81c-5c04b0502558",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "4565eb49-d9f2-4dcd-94ea-407198999c0e",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "bc4faca8-ee0e-44f3-9a59-d25836b58003"
          ],
          "secret": [
            "MsziTp5R9jS7cyv3N32yBq59o4zfSJOl4ZR4tgvG0hiKFRJjImHf_VWdmiWCXEnm658c50-28VDJv-Vv4QA5Jg"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "b35a256b-a666-4fac-bc3a-47f14a7471ab",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "e09a93dc-37b1-4b8b-9740-7f72bc5cb1c3"
          ],
          "secret": [
            "od_sLidTnV8rWIN-oi159g"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "6cc4e139-3320-4c7b-8ab5-c591e941cd03",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAyNoAhP4IqqWXlnYEaL9K4uGL/IN4V7KboHYnLjyIppgofewYlSv5HpseSMAzJJDWCCy4Je+Nri0t8oIyp67/VTHsOHXdaT1049GQbTb/NoERZt3tU8OCyNS6LZPMf6DkBWXlybR2h92kmLcUTNHQlHYmxV+DkrTf3ebjkQtio8Qs9tWCbenNAMny0KJDmw7dK4B4rwD19c1Tk2rDWet5L/fPfoZu/cA35M41VRZ/TQvxkiedeI9tv5DGd7FoQ4sLpFqK4vL3HbVpu6BRIU+MnUJo2digy1xXGsRU1PlszwGspMCZc9mlqfkpe4CROv0QcuRGbflro2I4dNwf+tGGvQIDAQABAoIBAQDGjyXWVCETOpMqjs97EimhM+KlJv+QiyTpNAU142ggceoN2prO1eL4y9bbiw7ERl8hQ7xk3HbPSyDSTr5vIUSQ38KsanERukzVb/Z80dLp+hzO+fTGS1D+47aOmj+fqNnjMEJD7qEDXi17P/rUmtO+ATQBCZTUMvXhtIEiggPo6qOUgw0qeXoHnzkqfYJZL000aKD9TNEzjxJ6e2D4KnaKxhshl19k6BJSQUENGYKCn9yz7Rr/7lWjMasEA52ue752SvTOhRLlVNjA2AGRj0/ErYgXyTPQ1AC4biPTXxpWJ5UKVb3oifr411JM/X4Ya2DwCCq7TXIpLewAJsOidXpBAoGBAP0AQ+n2z/J0N0FjQzqT6Ld3V8EEblOjCr0NxNIMYreZ1Prh3/A5FMPSgnv95KEaNix/cCJyjxbTI2zFdUYeQ181sRMdWhaGFpY42ssbzDqo1d97gP/zIlonKK3uAmhj5CC7EHLBTySC0oQ/csb8a/g+rZfjHeLiyr/Q0X6kZXgNAoGBAMs7fRHk5pp/k4QKOAlkhPLxVGCqyHDT9U991EUIT1RPB7KIgzrhS4PmJ1fgccwh/Dr49IAm7hcarP80gJ5Ja7SgiZWjRNPsPwTdF1BFGf1GV0SJLE/Y2PtXejUOQLrNC2G2omVQ+u+28fBLxNpUl+SveT8C8cQpUfuyYriZEm1xAoGAL7QOGh48ZUW+aWjS80eSOI2bETzJpKF4U981vjkxn9a0jr1qIPxSSv31NnXP1wR/NHKu7P/WtQIIiujMTPVF1Lzl72m4Y8jSl26O6n8KSgEtml7KGvh4ALGjfPAEqjQzfmxnFIwYZRT5po/kD1rm7L68sofTScVjXzl7Vrqemz0CgYEAo5RYUOTbMBPrmmXXQMglsp3Iep48A4S3eKohBwdvQr7xxSPX7LaWX64KkNLZBaN9L8Jemh+7l+Eiya9qrv0Nsi9dTpJBvgnzl2iVcUiNaK0LZOC8R/CUhYmdlcLJGxIbTSUBhWcu829fQTjbU5ivQaRzhOJL0sYndN3aVBbxHCECgYBTuDB10F7LfpkUFUigh6E6VeNsfsmVMxet7O+yGDXpQ7KU+U6pPMM0VmvWt4WdpXInqbXhyTYwbUE3Kl9cNiA5/ISNpgqwvirGuNcmEH8puTLF+eJuVk3JYjWRSjJili/+8dn8TcCNJ8Dlu+KJyY09JWnumeYA81ijU7V4MahrYg=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICqTCCAZECBgF/EWn7sTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1pc3N1ZXNfZm9sZGVyMB4XDTIyMDIxOTA5NTUzMloXDTMyMDIxOTA5NTcxMlowGDEWMBQGA1UEAwwNaXNzdWVzX2ZvbGRlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMjaAIT+CKqll5Z2BGi/SuLhi/yDeFeym6B2Jy48iKaYKH3sGJUr+R6bHkjAMySQ1ggsuCXvja4tLfKCMqeu/1Ux7Dh13Wk9dOPRkG02/zaBEWbd7VPDgsjUui2TzH+g5AVl5cm0dofdpJi3FEzR0JR2JsVfg5K0393m45ELYqPELPbVgm3pzQDJ8tCiQ5sO3SuAeK8A9fXNU5Nqw1nreS/3z36Gbv3AN+TONVUWf00L8ZInnXiPbb+QxnexaEOLC6RaiuLy9x21abugUSFPjJ1CaNnYoMtcVxrEVNT5bM8BrKTAmXPZpan5KXuAkTr9EHLkRm35a6NiOHTcH/rRhr0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAeSQ9UPEHxSbU/VClkMi4vJDqVpSm7TrZK+UX9RdOPIdipx3yHohtQUoe7ibndrzqOSmQvbwht3CNzvc5SYvMzWDQA6EM0G5/nUo1FhFs1U84/DcHJKGMmsFVwloPqYnCuOXHHVYEao0+HDhNqaqAnciFlYEIQahducZ7vq1VkWhDcZsZBPzh5cktrCjDG85Ad5w0BKvEm3gIFzaT1p5yBQxoGPZFkQQ4M09dfrXwBZS09bd6uCpt2dzdEfvQ4OFED9JY9COX+LsZNvvT5FCTtfnPLYyQ2n3lvmsUxCh8TrqaGhWHwBd0UMvWQnYyG8D6vs9juDLtjEn4X4RhTtWXlQ=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "2d947814-e551-49d7-aceb-175b36c9cbce",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpQIBAAKCAQEA6v9GXh6U3+5Ruu10qPOYcqivVe/XjLiqpz+aiG0pnuCMTedlA9KKostTdRHQ9AB75cauV4qeeIYzz8Rp5BCBOcl7rANRkP7pNIl17r83ud8qbtcAPrncaWNvjbSUxfGhKkketmz6dKJuev63/jzZmlNvBR6BIqyrmqRDuXdnreIWyPG2KLmkb2gpiyX3R2Dv/FIKxuTCPnq22oHho66IiyGPZzxMhsgWN2rXSLQIWNPn8gYbRYJMjpkiHmUIzaMJHXF4C3JM+LD9EcnRRHvdBtuEcjDLIM0a5Pp0S/9lzGYPMvsaCNg7dUqE5XBJgsb2PfsEc1Si8yX7tR3iFVh50wIDAQABAoIBACZSEGiCtiY6F6vS0wZGCuMPrN/np4+0AWgakBmVK4dT+K0vgaJ479CSNX7Os/NGLO4QUxfFbAgdYk+MKPRe2KPSvk8Tj3aEiwTdMZUIK48s3B+NAeY4qr+ozmUeQHBy8aQSnmaDKOhiIIAAD4Lu61EmL+F20voTjDxAcybIWOjauG8owkju+p9hx/Y3nCh1InlXQME1GFxnD/o9uJKWxuteSag/ydI4l9aUZEG9/mgaHD9u9W2d7YPoEeLVc4XUJHaPrw/WfDGhQLcenaPIIKlP0K1ApjDcI/tEa2zcYk6oRgAyfsUgWXAxq4KPTD/P9SMnAjxZsudX6qzcFc1rjIECgYEA/h49M7OOiinLYhJRDojAgzCGlLO7p/6oZZ/BIHMShbpFWGGRBwZVbKG2yxyXIv3kxV9XiO6u4kGN+vtOpGx41hCgJfOokYp0Y98OqDxkeXUNZYvvYc83SY+7Y/8/h/lDs/3XEp8aL6vRAz3pEhRG+OrlXYWXyy3maQu/qyBhO8ECgYEA7LzJOC7Cn9tLHFF8JjvaWSRia07uIyX9FzRvrHZCoAx0Ifo1S3Ez+Pcevnw1zgub4qZX7p8WaY/1PVhUcwJKK+US6qtnzloOdEBsz7hmnojb2MiReum2Fob9aYXimKTExl415lE11AIfwbPqzJ3aTHFuZMIYLLYpUaGESUUVqpMCgYEAt6Yc7vduJRWtYZQBNnLIRkdUi7UVAoT9KGx7AzuGgFSs9wGT8TK3m8mHNGTWKTi6E5YiydhNVUCxHlhubk/iSDo9sw/TnFMmaGL00crLhid85g1qlBJQT35rnAoE3Pzc3ACwZUnMf/U5GZGtlh5HaG9CEgORPwpOAU63VzIQc0ECgYEA5lf+Vbsxxcbi+2fRq4X7O1cqqAzBqtNwwd5UdnMO+pmDeffxWTmJf0o70M4csCIdiFegIV8LuKTI0uqaKNlmf/VBBbLHq0F25Og2t5pNxx2VBAaLfxPeB2dLNRx/UVSo3faW7UXBYUq7yYadBIDnAhAwgLtWOFL6OyI0C/K7VR8CgYEA5AiNp9NgiEO/jYwUOisE77O367DcVAkzZeyBx8XClnRFTarmkt7fdEdRari6EnIu9knaoTHpKy4gl91PMSSJoVDY6WcE87RHcn/YmTgpkVS1WztXPcjCEvIxOdULFee2FpEG7/2iqgJlgQgLgo5hnL93OpVANUFNeZkxnmR7SSk="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICqTCCAZECBgF/EWn7kTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1pc3N1ZXNfZm9sZGVyMB4XDTIyMDIxOTA5NTUzMloXDTMyMDIxOTA5NTcxMlowGDEWMBQGA1UEAwwNaXNzdWVzX2ZvbGRlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOr/Rl4elN/uUbrtdKjzmHKor1Xv14y4qqc/mohtKZ7gjE3nZQPSiqLLU3UR0PQAe+XGrleKnniGM8/EaeQQgTnJe6wDUZD+6TSJde6/N7nfKm7XAD653Gljb420lMXxoSpJHrZs+nSibnr+t/482ZpTbwUegSKsq5qkQ7l3Z63iFsjxtii5pG9oKYsl90dg7/xSCsbkwj56ttqB4aOuiIshj2c8TIbIFjdq10i0CFjT5/IGG0WCTI6ZIh5lCM2jCR1xeAtyTPiw/RHJ0UR73QbbhHIwyyDNGuT6dEv/ZcxmDzL7GgjYO3VKhOVwSYLG9j37BHNUovMl+7Ud4hVYedMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAPvzUb9PNXGnQzybare3cpzHwpLyefah/QwoOh2m9Ge1wuQ2HdefUnLqYf1JhkHUhARPaVe+gbsf3bnErr9A7C+8z60QjmKe9+rngKxcNZcdpNccXQOFH1PZldNvISJxYw2CA1JGI+6kLkOTp7bvyM4Skgb9tOCidYBlEw8e+rMjfQLqr68vEkO2mrSawlnWBy0UqyJlOefuF99g3RgCJ2tuTGtuq8CstJaFOLCQVAGD30abrAAwI3Cp2imFiejFZNyoBv5ytnSj9/NyHtSh682leeQHMcb1qFvzQSzRBHm/lDuwv4fPI6cqSLf1ZicBd9iEBglP4Ia08VUfWyqiX4A=="
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "88f32af7-c825-4ac8-aa1f-a963e8f5e927",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "77e456c6-28bb-408d-8838-a7f1a5fb0688",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "9567793e-4152-4f40-ab6c-421158e473ce",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "5016078b-6207-46a8-aa24-6af1611ef088",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "13d0fa52-2d63-4255-9349-8b2cee93fbbb",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "c87810f7-e6dd-46eb-a4f8-d0459898d92d",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "9b193929-216a-464f-ae27-ede12fafa372",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "4f529ff0-99f7-443d-a435-07ca551b7334",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "327b34fe-a51d-4374-afee-476602eb4217",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "2ab1148d-cd06-4111-8c85-345e145e1b46",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "229aae16-f995-49f6-859a-6fb1202bec6b",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "e1327626-c675-4b4a-9961-d2dc2d3e2966",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "630899e5-4cce-4aad-8fcf-c1ce14d37903",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "13612e61-c2a6-4873-8052-a9ccd5d645e7",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f2aa0f8d-9cc9-4517-ab77-d4da0e83654e",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "3fb6c457-90ad-4df5-b349-0aa4fe1c37a1",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e04ee036-75ab-4695-a88c-5b6065449c51",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "486daf9d-ee7d-4fef-a3cd-afff66b9d61c",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "5ec1395d-4930-445f-b0d2-9060cccb709d",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5fb0eab4-c76e-4dbe-82b5-b2afd9007308",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "a44fc7e5-b036-42ca-9e30-900d66df2adb",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "03fda282-0cba-4e38-9d73-f936ad9d2976",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "16.1.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}